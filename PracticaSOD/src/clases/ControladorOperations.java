package clases;


/**
* clases/ControladorOperations.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from interfaz.idl
* miércoles 27 de marzo de 2013 13H37' CET
*/

public interface ControladorOperations 
{
	/**
	 * Indica el final de un trabajo por parte de un atacante
	 * @param id Id del trabajo finalizado
	 * @param trabajo Resultado o null si no se ha encontrado uno
	 */
  void finTrabajo (int id, String trabajo);
  /**
   *
   * @return El trabajo que debe realizar un hilo atacante
   */
  clases.Division getTrabajo ();
  /**
   * Añade un trabajo a la lista
   * @param t Trabajo a añadir
   * @return true en caso de exito y false en caso de fallo
   */
  boolean setTrabajo (clases.Division t);
  /**
   * Crea un trabajo MD5
   * @param cadena Cadena MD5 a resolver
   * @param tam_maximo Tamaño maximo de la contraseña a buscar
   * @return true en caso de exito y false en caso de fallo
   */
  boolean crearMD5 (String cadena, int tam_maximo);
  /**
   * Crea un trabajo SHA1
   * @param cadena Cadena SHA1 a resolver
   * @param tam_maximo Tamaño maximo de la contraseña a buscar
   * @return true en caso de exito y false en caso de fallo
   */
  boolean crearSHA (String cadena, int tam_maximo);
  /**
   * Crea un trabajo de ataque a servidor
   * @param cadena Dirección del servidor a atacar
   * @param tam_maximo Tamaño maximo de la contraseña a buscar   * @param puerto
   * @param usuario Usuario con el que se atacará el servidor
   * @param puerto Puerto a atacar
   * @return true en caso de exito y false en caso de fallo
   */
  boolean crearRed (String cadena, int puerto, String usuario, int tam_maximo);
} // interface ControladorOperations
